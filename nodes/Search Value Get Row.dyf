<Workspace Version="0.8.0.950" X="-29.8235774857181" Y="38.8137582243339" zoom="1.47618023926361" Name="Search Value Get Row" ID="1a475ce9-5817-448f-8712-7a5d8af338b1" Description="This node will search the Excel Spreadsheet for a single string value and return an entire row of data that this value was found in. For example if key was found at A15 then entire row 15 will be returned." Category="Archi-lab_Bumblebee.App">
  <NamespaceResolutionMap />
  <Elements>
    <DSIronPythonNode.PythonNode guid="a2bbf1da-30c7-4df7-bc4e-99df7d1f02c3" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="396" y="168" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="4">
      <Script>#Copyright(c) 2015, David Mans, Konrad Sobon
# @arch_laboratory, http://archi-lab.net, http://neoarchaic.net

import clr
import sys
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

import System
from System import Array
from System.Collections.Generic import *

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

import os.path
import os

appDataPath = os.getenv('APPDATA')
bbPath = appDataPath + r"\Dynamo\0.8\packages\Bumblebee\extra"
if bbPath not in sys.path:
	sys.path.Add(bbPath)

import bumblebee as bb

clr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')
from Microsoft.Office.Interop import Excel

System.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo("en-US")
from System.Runtime.InteropServices import Marshal

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

filePath = IN[0]
runMe = IN[1]
sheetName = IN[2]
searchValues = IN[3]

def SetUp(xlApp):
	# supress updates and warning pop ups
	xlApp.Visible = False
	xlApp.DisplayAlerts = False
	xlApp.ScreenUpdating = False
	return xlApp

def ExitExcel(filePath, xlApp, wb, ws):
	# clean up before exiting excel, if any COM object remains
	# unreleased then excel crashes on open following time
	def CleanUp(_list):
		if isinstance(_list, list):
			for i in _list:
				Marshal.ReleaseComObject(i)
		else:
			Marshal.ReleaseComObject(_list)
		return None
	
	wb.SaveAs(str(filePath))
	xlApp.ActiveWorkbook.Close(False)
	xlApp.ScreenUpdating = True
	CleanUp([ws,wb,xlApp])
	return None

if runMe:
	message = None
	xlApp = SetUp(Excel.ApplicationClass())
	
	if os.path.isfile(str(filePath)):
		xlApp.Workbooks.open(str(filePath))
		wb = xlApp.ActiveWorkbook
		ws = xlApp.Sheets(sheetName)
		
		originX = ws.UsedRange.Row
		originY = ws.UsedRange.Column
		boundX = ws.UsedRange.Rows(ws.UsedRange.Rows.Count).Row
		boundY = ws.UsedRange.Columns(ws.UsedRange.Columns.Count).Column
		
		dataOut = []
		xlAfter = ws.Cells(originY, originX)
		xlLookIn = -4163
		xlLookAt = "&amp;H2"
		xlSearchOrder = "&amp;H1"
		xlSearchDirection = 1
		xlMatchCase = False
		xlMatchByte = False
		xlSearchFormat = False
		if isinstance(searchValues, list):
			for key in searchValues:
				cellAddress = ws.Cells.Find(key, xlAfter, xlLookIn, xlLookAt, xlSearchOrder, xlSearchDirection, xlMatchCase, xlMatchByte, xlSearchFormat).Address(False, False)
				addressX = xlApp.Range(cellAddress).Row
				addressY = xlApp.Range(cellAddress).Column
				row = ws.Range[ws.Cells(addressX, originY), ws.Cells(addressX, boundY)].Value2
				dataOut.append(row)
		else:
			cellAddress = ws.Cells.Find(searchValues, xlAfter, xlLookIn, xlLookAt, xlSearchOrder, xlSearchDirection, xlMatchCase, xlMatchByte, xlSearchFormat).Address(False, False)
			addressX = xlApp.Range(cellAddress).Row
			addressY = xlApp.Range(cellAddress).Column
			row = ws.Range[ws.Cells(addressX, originY), ws.Cells(addressX, boundY)].Value2
			dataOut = row
		ExitExcel(filePath, xlApp, wb, ws)
	else:
		message = "Specified File doesn't exist."
else:
	message = "Run Me is set to False. Please set \nto True if you wish to write data \nto Excel."

#Assign your output to the OUT variable
if message == None:
	OUT = dataOut
else:
	OUT = '\n'.join('{:^35}'.format(s) for s in message.split('\n'))</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Symbol guid="8b262099-2ddc-40fc-a626-ea593e8c2301" type="Dynamo.Nodes.Symbol" nickname="Input" x="214.432475416818" y="126.117178734812" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="FilePath" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="2ae6456d-3b06-42a8-9eeb-d3b48c5bb385" type="Dynamo.Nodes.Symbol" nickname="Input" x="213.304018649763" y="184.419108766275" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="RunIt" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="ccde6830-b86f-4422-b6ec-f4e41869b032" type="Dynamo.Nodes.Symbol" nickname="Input" x="212.175561882708" y="243.84236685054" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="SheetName" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="78586294-d3c6-4bd5-b68e-285fd555e64f" type="Dynamo.Nodes.Symbol" nickname="Input" x="212.729097194857" y="302.704960908403" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="SearchFor" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="5e7a1067-8ab6-4be3-a073-a11e59c6ad6c" type="Dynamo.Nodes.Output" nickname="Output" x="562.657860457442" y="167.241136636376" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="OUT" />
    </Dynamo.Nodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="a2bbf1da-30c7-4df7-bc4e-99df7d1f02c3" start_index="0" end="5e7a1067-8ab6-4be3-a073-a11e59c6ad6c" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="8b262099-2ddc-40fc-a626-ea593e8c2301" start_index="0" end="a2bbf1da-30c7-4df7-bc4e-99df7d1f02c3" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="2ae6456d-3b06-42a8-9eeb-d3b48c5bb385" start_index="0" end="a2bbf1da-30c7-4df7-bc4e-99df7d1f02c3" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="ccde6830-b86f-4422-b6ec-f4e41869b032" start_index="0" end="a2bbf1da-30c7-4df7-bc4e-99df7d1f02c3" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="78586294-d3c6-4bd5-b68e-285fd555e64f" start_index="0" end="a2bbf1da-30c7-4df7-bc4e-99df7d1f02c3" end_index="3" portType="0" />
  </Connectors>
  <Notes />
</Workspace>